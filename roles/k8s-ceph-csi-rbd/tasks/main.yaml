---
- name: check ceph csi url and branch
  ansible.builtin.debug:
    msg: 
    - "url: {{ CEPH_CSI_REPO_URL }}"
    - "branch: {{ CEPH_CSI_BRANCH }}"

- name: git clone ceph csi repo
  ansible.builtin.git:
    repo: "{{ CEPH_CSI_REPO_URL }}"
    dest: "/tmp/ceph-csi/"
    version: "{{ CEPH_CSI_BRANCH }}"
    depth: 1
#  tags:
#  - never  # skip this task

- name: copy deploy rbd plugin manifest
  ansible.builtin.copy:
    remote_src: yes
    src: "/tmp/ceph-csi/deploy/rbd/kubernetes/"
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"
#  tags:
#  - never  # skip this task

- name: copy namespace manifest
  ansible.builtin.template:
    src: csi-namespace.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-namespace.yaml"

- name: carete namespace
  ansible.builtin.command:
    cmd: kubectl apply -f csi-namespace.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"

- name: copy ceph-csi-config config-map manifest
  ansible.builtin.template:
    src: csi-config-map.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-config-map.yaml"

- name: create ceph-csi-config config-map
  ansible.builtin.command:
    cmd: kubectl apply -f csi-config-map.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"

- name: copy ceph-config config-map manifest
  ansible.builtin.template:
    src: csi-ceph-config.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-ceph-conf.yaml"

- name: create ceph-config config-map
  ansible.builtin.command:
    cmd: kubectl apply -f csi-ceph-conf.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"

- name: copy secret manifest
  ansible.builtin.template:
    src: csi-secret.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-secret.yaml"

- name: create secret
  ansible.builtin.command:
    cmd: kubectl apply -f csi-secret.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"

- name: check namespace value to current manifest 
  ansible.builtin.shell:
    cmd: 'grep -rl "namespace: default" ./ | wc -l'
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"
  register: default_namespace_count

# todo: break into multi tasks using register and when condition and use replace module
- name: update namespace to current deploy rbd plugin manifest
  ansible.builtin.shell:
    cmd: 'sed -i "s/namespace: default/namespace: {{ RESOURCE_CEPH_CSI_NAMESPACE_NAME }}/g" $(grep -rl "namespace: default" ./)'
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"
  when: default_namespace_count.stdout != "0"
  ignore_errors: True

- name: create rbac and pod security policy resources
  ansible.builtin.command:
    cmd: kubectl apply -f {{ item }}
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"
  with_items:
  - csi-provisioner-rbac.yaml
  - csi-nodeplugin-rbac.yaml
  - csi-provisioner-psp.yaml
  - csi-nodeplugin-psp.yaml

- name: copy rbdplugin-provisioner mainfest
  ansible.builtin.template:
    src: csi-rbdplugin-provisioner.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-rbdplugin-provisioner.yaml"

- name: create rbdplugin-provisioner
  ansible.builtin.command:
    cmd: kubectl apply -f csi-rbdplugin-provisioner.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"

- name: copy rbdplugin manifest
  ansible.builtin.template:
    src: csi-rbdplugin.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-rbdplugin.yaml"

- name: create rbdplugin
  ansible.builtin.command:
    cmd: kubectl apply -f csi-rbdplugin.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"

- name: copy storage class manifest
  ansible.builtin.template:
    src: csi-storage-class.j2
    dest: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}/csi-storage-class.yaml"

- name: create ceph csi rbd storage class
  ansible.builtin.command:
    cmd: kubectl apply -f csi-storage-class.yaml
    chdir: "{{ KUBERNETES_CEPH_CSI_DEPLOY_TEMPLATE_DIR }}"